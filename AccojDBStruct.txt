# 当前为终端操作
# Flask-PyMongo见https://flask-pymongo.readthedocs.io/en/latest/
# 建议用notepad++打开

# 用户表(已确定)
db.accoj.users.insert({"student_no": "17020340111", 	# 学号
					   "student_name": "郭雄",  		# 姓名
					   "student_faculty": "计算机与信息科学学院", # 学院
					   "student_class": "网络1701"		# 班级
					   "student_phone": "17674549805",  # 手机号
					   "student_sex": "男",				# 性别
					   "student_borth": "1998-05-05",   # 生日
					   "password": "...", 				# 密码
					   "email": "1848600800@qq.com"		# 邮箱
					  })
# 科目库表
db.accoj.subject.insert({"subject_no": 1,				# 科目编号
						 "subject_name": " ",			# 科目名称
						 "subject_type": " "			# 科目类别（资产类，权益类，成本类，费用类，收入类，利润类）		
						})

# 题库表
db.accoj.problem.insert({"content": "...", 	    		# 内容
						 "date": "2019-12-29",  		# 日期
						 "subjects": [], 				# 科目
						 "key_element": [],				# 要素
						 "valuenum": 5, 				# 变量数目
						 "values": [{"value": 1, "low": 0, "high": 10}] # 值，下限，上限
						})

(用户成立公司的时候同时创建一个公司副本，保存正确答案,所属用户为"student_no_cp")				 
# 公司表
db.accoj.company.insert({"student_no": student_no,		 	# 用户ID
						 "com_name": " ",	  			# 公司名称
						 "com_address": " ",	  		# 公司地址
						 "com_business_addr": " ",		# 公司经营地址
						 "com_legal_rep": " ",			# 法人
						 "com_regist_cap": " ",			# 注册资本
						 "com_operate_period: " ",		# 经营期限
						 "com_business_scope": " ",		# 经营范围
						 "com_shareholder": [],			# 股东姓名
						 # 公司业务
						 "business": [{"business_id": 1,# 公司业务id，从1开始增加
									   "content": "..." 
									   "date": "2019-12-29",
									   "subjects": [],
									   "valuenum": 5,
									   "values": []
									   "affect_type": 1,						# 对会计等式影响类型
									   "key_element_infos": [					# 会计要素信息
															{
															 "key_element": [],	# 会计要素
															 "money": 1,		# 金额
															 "is_up": boolean	# 增减
															}]
									  }]
						 # 会计分录
						 "entry_infos": [{
										  "entry_name": " ",# 分录名称
										  "borrow": [],		# 借
										  "lend": []		# 贷
										 }]
						 # 会计账户
						 "ledger_infos": [{
										   "subject": subject,					# 会计科目
										   "opening_balance": 1, 				# 期初余额
										   "increase_in_this_period": [], 		# 本期增加额
										   "current_amount": 1,				 	# 本期发生额
										   "ending_balance": 1,				 	# 期末余额
										   "decrease_in_this_period": []		# 本期减少额
										   "is_borrow: boolean					# 借贷标志位
										   }]
						 # 试算平衡表
						 "trial_balance": [
										   "subject": subject,			 		# 会计科目
										   "borrow_1": 1,				 		# 借方期初余额
										   "lend_1": 1,					 		# 贷方期初余额
										   "borrow_2": 1,				 		# 借方本期发生额
										   "lend_2": 1,					 		# 贷方本期发生额
										   "borrow_3": 1,				 		# 借方期末余额 
										   "lend_3": 1					 		# 贷方期末余额
										   ]
						 # 会计凭证
						 "acc_documents": [{
										   "source_document": path,		 		# 原始凭证存储路径
										   "doc_no": 1,					 		# 会计凭证编号
									       "date": "1998-05-05",		 		# 日期
										   "doc_nums": 1,				 		# 单据数量
										   "abstract": " ",				 		# 摘要
									       "subject": subject,			 		# 总账科目
										   "detail_subject": " ",		 		# 明细科目
										   "borrow_money": 1,			 		# 借方金额
										   "lend_money": 1				 		# 贷方金额
										   }]
						})
						
# 判断会计要素和增减金额以及对会计等式的影响类型
db.accoj.problem_1.insert({"company_id": com_id,								# 公司ID
						   "affect_type": 1,									# 对会计等式影响类型
						   "key_element_infos": [								# 会计要素信息
												{"business_id": business_id,	# 公司业务ID
												 "key_element": [],				# 会计要素
												 "money": 1,					# 金额
												 "is_up": boolean				# 增减
												}]		
						  })

# 会计分录
db.accoj.entry.insert({"company_id": com_id,
					   "entry_infos": [{					 # 会计分录
					  				   "entry_name": " ", 	 # 分录名称
									   "borrow": [],		 # 借
									   "lend": []			 # 贷
									   }]
					  })

# 会计账户
db.accoj.ledger.insert({"company_id": com_id,
						"subject": subject,					 # 会计科目
						"opening_balance": 1, 				 # 期初余额
						"increase_in_this_period": [], 		 # 本期增加额
						"current_amount": 1,				 # 本期发生额
						"ending_balance": 1,				 # 期末余额
						"decrease_in_this_period": []		 # 本期减少额
						"is_borrow: boolean					 # 借贷标志位
					   })

# 试算平衡
db.accoj.trial_balance.insert({"subject": subject,			 # 会计科目
							   "borrow_1": 1,				 # 借方期初余额
							   "lend_1": 1,					 # 贷方期初余额
							   "borrow_2": 1,				 # 借方本期发生额
							   "lend_2": 1,					 # 贷方本期发生额
							   "borrow_3": 1,				 # 借方期末余额 
							   "lend_3": 1					 # 贷方期末余额
							  })

# 会计凭证
db.accoj.acc_documents.insert({"com_id": com_id,
							   "business_id": business_id,
							   "source_document": path,		 # 原始凭证存储路径
							   "doc_no": 1,					 # 会计凭证编号
							   "date": "1998-05-05",		 # 日期
							   "doc_nums": 1,				 # 单据数量
							   "abstract": " ",				 # 摘要
							   "subject": subject,			 # 总账科目
							   "detail_subject": " ",		 # 明细科目
							   "borrow_money": 1,			 # 借方金额
							   "lend_money": 1				 # 贷方金额
							  })

# 会计账簿/明细分类账
db.accoj.subsidiary_ledger.insert({
								  })

# 资产负债表
db.accoj.balance_sheet.insert({
							  })
							  
# 利润表
db.accoj.income_statement.insert({
							     })
# 比率分析法表
db.accoj.ratio_analysis.insert({
							   })
